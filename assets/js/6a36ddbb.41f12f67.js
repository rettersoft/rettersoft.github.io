"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[8538],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=i,f=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(f,r(r({ref:t},p),{},{components:n})):a.createElement(f,r({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4446:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return c}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={id:"Validation",sidebar_label:"Validation",sidebar_position:3},l="Validation",d={unversionedId:"Concepts/Classes/Methods/Validation",id:"Concepts/Classes/Methods/Validation",title:"Validation",description:"Rio uses JSON Schema for validation.",source:"@site/docs/Concepts/Classes/Methods/Validation.md",sourceDirName:"Concepts/Classes/Methods",slug:"/Concepts/Classes/Methods/Validation",permalink:"/docs/Concepts/Classes/Methods/Validation",editUrl:"https://github.com/rettersoft/rettersoft.github.io/blob/v2/docs/Concepts/Classes/Methods/Validation.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"Validation",sidebar_label:"Validation",sidebar_position:3},sidebar:"ConceptsSideBar",previous:{title:"Method Types",permalink:"/docs/Concepts/Classes/Methods/MethodType"},next:{title:"From SDKs",permalink:"/docs/Concepts/Classes/Methods/Calling methods/From SDKs"}},p={},c=[{value:"Example Model",id:"example-model",level:3},{value:"Post Body Validation",id:"post-body-validation",level:3},{value:"Query String Validation",id:"query-string-validation",level:3},{value:"Failed Validations",id:"failed-validations",level:3}],u={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"validation"},"Validation"),(0,o.kt)("p",null,"Rio uses ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSON Schema")," for validation."),(0,o.kt)("p",null,"Validation is optional but most of the time neccessary. You can use models for method input validation. ",(0,o.kt)("a",{parentName:"p",href:"../../../Models"},"See here")," for more about models."),(0,o.kt)("h3",{id:"example-model"},"Example Model"),(0,o.kt)("p",null,"Let's say we have a model called ",(0,o.kt)("inlineCode",{parentName:"p"},"SayHelloInput")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "type": "object",\n  "required": [\n    "firstName"\n  ],\n  "properties": {\n    "firstName": {\n      "type": "string",\n      "description": "The person\'s first name."\n    },\n    "lastName": {\n      "type": "string",\n      "description": "The person\'s last name."\n    },\n    "age": {\n      "description": "Age in years which must be equal to or greater than zero.",\n      "type": "integer",\n      "minimum": 0\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"post-body-validation"},"Post Body Validation"),(0,o.kt)("p",null,"To validate a post body you need to define validation in ",(0,o.kt)("inlineCode",{parentName:"p"},"inputModel")," field like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"init: index.init\ngetState: index.getState\nmethods:\n  - method: sayHello\n    inputModel: SayHelloInput\n    tag: test\n    invocationType: IMMEDIATE\n    handler: index.sayHello\n")),(0,o.kt)("h3",{id:"query-string-validation"},"Query String Validation"),(0,o.kt)("p",null,"To validate data sent in querystrings you need to define validation in ",(0,o.kt)("inlineCode",{parentName:"p"},"queryStringInputModel")," field like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"init: index.init\ngetState: index.getState\nmethods:\n  - method: sayHello\n    queryStringInputModel: SayHelloInput\n    tag: test\n    invocationType: IMMEDIATE\n    handler: index.sayHello\n")),(0,o.kt)("h3",{id:"failed-validations"},"Failed Validations"),(0,o.kt)("p",null,"Rio uses ",(0,o.kt)("a",{parentName:"p",href:"https://ajv.js.org/"},"AJV")," for model validation. If a validation fails Rio returnes a response with status code: ",(0,o.kt)("inlineCode",{parentName:"p"},"400"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "code": "VALIDATION",\n  "message": "Model validation has been failed.",\n  "issues": [\n    {\n      "instancePath": "",\n      "schemaPath": "#/required",\n      "keyword": "required",\n      "params": {\n        "missingProperty": "firstName"\n      },\n      "message": "must have required property \'firstName\'"\n    }\n  ]\n}\n')))}m.isMDXComponent=!0}}]);