"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[8884],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3389:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return l}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={id:"Request Response",sidebar_label:"Request Response",sidebar_position:6},c="Request & Response",u={unversionedId:"Concepts/Classes/Methods/Request Response",id:"Concepts/Classes/Methods/Request Response",title:"Request & Response",description:"Data object",source:"@site/docs/Concepts/Classes/Methods/Request Response.md",sourceDirName:"Concepts/Classes/Methods",slug:"/Concepts/Classes/Methods/Request Response",permalink:"/docs/Concepts/Classes/Methods/Request Response",editUrl:"https://github.com/rettersoft/rettersoft.github.io/blob/v2/docs/Concepts/Classes/Methods/Request Response.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"Request Response",sidebar_label:"Request Response",sidebar_position:6},sidebar:"ConceptsSideBar",previous:{title:"Scheduling",permalink:"/docs/Concepts/Classes/Methods/Scheduling"},next:{title:"Retry Delay",permalink:"/docs/Concepts/Classes/Methods/Retry Delay"}},p={},l=[{value:"Data object",id:"data-object",level:3},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3}],d={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"request--response"},"Request & Response"),(0,a.kt)("h3",{id:"data-object"},"Data object"),(0,a.kt)("p",null,"All Rio methods receive ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," object and we expect you to return the same object from the method. Data object has ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," objects on it."),(0,a.kt)("h3",{id:"request"},"Request"),(0,a.kt)("p",null,"Any data sent to a method will be accessible on ",(0,a.kt)("inlineCode",{parentName:"p"},"data.request")," object. It's interface is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Request<T = any> {\n    httpMethod: string;\n    body?: T;\n    headers: KeyValueString;\n    queryStringParams: KeyValueString;\n}\n")),(0,a.kt)("p",null,"You can use incoming data like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function someMethod(data: Data): Promise<Data> {\n\n    // Read body\n    let foo = data.request.body.foo\n\n    // Read headers\n    let headerValue = data.request.headers['some-header']\n\n    // Read http method\n    let httpMethod = data.request.httpMethod\n\n    // Read query string params\n    let fooFromQueryString = data.request.queryStringParams.foo\n\n    return data\n}\n")),(0,a.kt)("h3",{id:"response"},"Response"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"data.response")," to customize the response the caller will receive. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function someMethod(data: Data): Promise<Data> {\n\n    data.response = {\n        statusCode: 200,\n        body: 'OK'\n    }\n\n    return data\n}\n")),(0,a.kt)("p",null,"To return an object instead of a string you can:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function someMethod(data: Data): Promise<Data> {\n\n    data.response = {\n        // You can change status code, body and headers\n        statusCode: 200,\n        body: { foo: \"bar\" },\n        headers: { 'some-header': 'some-value' }\n    }\n\n    return data\n}\n")))}m.isMDXComponent=!0}}]);