"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[2680],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(i,".").concat(m)]||u[m]||c[m]||s;return n?o.createElement(f,a(a({ref:t},d),{},{components:n})):o.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<s;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6557:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var o=n(7462),r=n(3366),s=(n(7294),n(3905)),a=["components"],l={id:"Body",sidebar_label:"Body",sidebar_position:1},i="Body",p={unversionedId:"Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body",id:"Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body",title:"Body",description:"In your projects, probably the most common used method response will be body.",source:"@site/docs/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body.mdx",sourceDirName:"Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response",slug:"/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body",permalink:"/docs/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body",editUrl:"https://github.com/rettersoft/rettersoft.github.io/tree/master/docs/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Body.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"Body",sidebar_label:"Body",sidebar_position:1},sidebar:"DeveloperConsoleSideBar",previous:{title:"Testing with other identities",permalink:"/docs/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Testing with other identities"},next:{title:"Headers",permalink:"/docs/Developer Console/Project Detail Screen/Class Editor/Class Tester/Calling Methods/Method Response/Headers"}},d={},c=[{value:"Example code",id:"example-code",level:2},{value:"Response&#39;s Body",id:"responses-body",level:3}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"body"},"Body"),(0,s.kt)("p",null,"In your projects, probably the most common used method response will be ",(0,s.kt)("inlineCode",{parentName:"p"},"body"),".\nIt is simple and easy to use. Most of the time we can think of the ",(0,s.kt)("inlineCode",{parentName:"p"},"body")," as method's return value."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"To fill the body of a method's response, fill the ",(0,s.kt)("inlineCode",{parentName:"p"},"data.response"),"'s ",(0,s.kt)("inlineCode",{parentName:"p"},"body")," as shown:"),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"data.response = {\n  body: {\n    // Variable\n  }\n};\n"))),(0,s.kt)("h2",{id:"example-code"},"Example code"),(0,s.kt)("p",null,"This code gathers the value of ",(0,s.kt)("inlineCode",{parentName:"p"},"phoneNumber"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"mail"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"firstName"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"lastName")," and writes these variables to response's ",(0,s.kt)("inlineCode",{parentName:"p"},"body"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="projectName/Classes/index.ts"',title:'"projectName/Classes/index.ts"'},"export async function setOfficeProfile(data: Data): Promise<StepResponse> {\n  let {phoneNumber, mail, firstName, lastName} = data.request.body;\n  data.response = {\n    statusCode: 200,\n    body: {\n      phoneNumber,\n      mail,\n      firstName,\n      lastName\n    }\n  };\n  return data;\n}  \n")),(0,s.kt)("h3",{id:"responses-body"},"Response's Body"),(0,s.kt)("p",null,"After illustrated method's variables filled, our response will be like this: "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-JSON",metastring:'title="Response\'s body"',title:"\"Response's",'body"':!0},'{\n  "phoneNumber": "01234567890",\n  "mail": "examplemail@mail.com",\n  "firstName": "exampleFirstName",\n  "lastName": "exampleLastName"\n}\n')))}m.isMDXComponent=!0}}]);