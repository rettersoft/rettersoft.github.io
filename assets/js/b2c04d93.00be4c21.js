"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[9030],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,c(c({ref:n},l),{},{components:t})):r.createElement(m,c({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3013:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),c=["components"],i={sidebar_label:"getInstance",sidebar_position:17},s="getInstance",u={unversionedId:"Reference/RDK/getInstance",id:"Reference/RDK/getInstance",title:"getInstance",description:"If instanceId is provided, getInstance method returns information about that instances methods. If instanceId is not provided then a new instance is created",source:"@site/docs/Reference/RDK/getInstance.md",sourceDirName:"Reference/RDK",slug:"/Reference/RDK/getInstance",permalink:"/docs/Reference/RDK/getInstance",editUrl:"https://github.com/rettersoft/rettersoft.github.io/tree/New-Side-Bar/docs/Reference/RDK/getInstance.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_label:"getInstance",sidebar_position:17},sidebar:"ReferenceSideBar",previous:{title:"methodCall",permalink:"/docs/Reference/RDK/methodCall"},next:{title:"getState",permalink:"/docs/Reference/RDK/getState"}},l={},p=[],d={toc:p};function f(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getinstance"},"getInstance"),(0,o.kt)("p",null,"If instanceId is provided, getInstance method returns information about that instances methods. If instanceId is not provided then a new instance is created"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"let result = await rdk.getInstance({\n            classId: 'classId',\n            instanceId: 'instanceId'\n            body: {\n            }\n            })\n")),(0,o.kt)("h1",{id:"response"},"Response"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "statusCode": 200,\n  "body": {\n    "instanceId": "instanceId",\n    "newInstance": true,\n    "methods": [\n      {\n        "name": "test",\n        "type": "QUEUED_WRITE",\n        "sync": true,\n        "tag": "test"\n      }\n    ],\n    "response": {\n      "instanceId": "instanceId"\n    }\n')))}f.isMDXComponent=!0}}]);