"use strict";(self.webpackChunkrbs_dev_docs=self.webpackChunkrbs_dev_docs||[]).push([[5646],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8374:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],s={sidebar_position:7},c="Lookup Keys",l={unversionedId:"main_concepts/lookupKeys",id:"main_concepts/lookupKeys",isDocsHomePage:!1,title:"Lookup Keys",description:"Instances have unique id's. However sometimes we need an easier method to find our instances instead of instance id's.",source:"@site/docs/main_concepts/lookupKeys.mdx",sourceDirName:"main_concepts",slug:"/main_concepts/lookupKeys",permalink:"/docs/main_concepts/lookupKeys",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/main_concepts/lookupKeys.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Global Memory",permalink:"/docs/main_concepts/globalMemory"},next:{title:"Files",permalink:"/docs/main_concepts/files"}},u=[],p={toc:u};function d(e){var t=e.components,s=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lookup-keys"},"Lookup Keys"),(0,r.kt)("p",null,"Instances have unique id's. However sometimes we need an easier method to find our instances instead of instance id's. "),(0,r.kt)("p",null,"For example think of a ",(0,r.kt)("strong",{parentName:"p"},"User")," class. Users have user id's but they might also have emails. Let's create a updateProfile method and mark this instance with users email."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function updateEmail(data: Data): Promise<StepResponse> {\n\n    await rdk.setLookUpKey({\n        key: { name: "email", value: "jane@mail.com" }\n    })\n\n    return data\n}\n')),(0,r.kt)("p",null,"Let's change it a little bit to make it look a bit more realistic. Maybe we have sent a code to this users email and she is validating it like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function updateEmail(data: Data): Promise<StepResponse> {\n\n    if(data.request.body.code !== data.state.private.emailValidationCode) {\n        data.response = {statusCode: 403}\n        return data\n    }\n\n    await rdk.setLookUpKey({\n        key: { name: "email", value: "jane@mail.com" }\n    })\n\n    return data\n}\n')),(0,r.kt)("p",null,"Now let's see how to find this instance without knowing its instance id."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function findUserByEmail(data: Data): Promise<StepResponse> {\n    \n    const lookupResult = await rdk.getLookUpKey({\n        key: {\n            name: "email", value: "jane@mail.com"\n        }\n    })\n\n    if(lookupResult.success) {\n        data.response = {\n            statusCode: 200,\n            body: lookupResult.data\n        }\n    }\n\n    return data\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"lookupResult.data")," contains:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "instanceId": "01FPT7Z2W67MYZ3ZAKBDCPZ4AJ"\n}\n')),(0,r.kt)("p",null,"Also in the console you can find this instance by using its lookup key like below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Methods",src:n(6759).Z})))}d.isMDXComponent=!0},6759:function(e,t,n){t.Z=n.p+"assets/images/email_lookup-99e7d0fb5eddd0762e5f81eb2d79e46a.png"}}]);