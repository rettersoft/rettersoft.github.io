"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[2896],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=d(t),f=o,y=u["".concat(s,".").concat(f)]||u[f]||l[f]||i;return t?r.createElement(y,a(a({ref:n},p),{},{components:t})):r.createElement(y,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9139:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return l}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={sidebar_label:"Dependencies",sidebar_position:5},s="Dependendices",d={unversionedId:"Concepts/Dependencies",id:"Concepts/Dependencies",title:"Dependendices",description:"Dependencies can be used for setting project scoped variables. This variable can be anything like function, object, constant etc. This configuration allows user to edit a project scoped variable without changing it in every class/method it is used.",source:"@site/docs/Concepts/Dependencies.md",sourceDirName:"Concepts",slug:"/Concepts/Dependencies",permalink:"/docs/Concepts/Dependencies",editUrl:"https://github.com/rettersoft/rettersoft.github.io/blob/master/docs/Concepts/Dependencies.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Dependencies",sidebar_position:5},sidebar:"ConceptsSideBar",previous:{title:"Models",permalink:"/docs/Concepts/Models"},next:{title:"State",permalink:"/docs/Concepts/State"}},p={},l=[{value:"Setting a Dependency",id:"setting-a-dependency",level:2},{value:"Usage in Code",id:"usage-in-code",level:2}],u={toc:l};function f(e){var n=e.components,c=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,c,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dependendices"},"Dependendices"),(0,i.kt)("p",null,"Dependencies can be used for setting project scoped variables. This variable can be anything like function, object, constant etc. This configuration allows user to edit a project scoped variable without changing it in every class/method it is used."),(0,i.kt)("h2",{id:"setting-a-dependency"},"Setting a Dependency"),(0,i.kt)("p",null,"For now, dependencies can be set in your local project folder. After creating a a folder named dependencies in your project folder, you can create your dependency folder or file under that path. In the end, your files should be looking like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"Dependency Folders",src:t(1636).Z,width:"744",height:"568"})),(0,i.kt)("h2",{id:"usage-in-code"},"Usage in Code"),(0,i.kt)("p",null,"After completing the configurations of your dependency and deploying your project, you have to specify your dependency in class template"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"authorizer: index.authorizer\ninit: index.init\ngetState: index.getState\ndependencies: \n  - firstDependency\n  - secondDependency\nmethods:\n  - method: test\n    tag: test\n    sync: true\n    handler: index.test\n")),(0,i.kt)("p",null,"Finally, your variable can be reached in your code: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import RDK, { Data, InitResponse, Response, StepResponse } from \"@retter/rdk\";\nimport {userName, password} from './dependencies/firstDependency/testObject.json'\n\n\nexport async function foo(data: Data): Promise<Data> {\n    if(data.request.body.userName===userName){\n        data.response= {statusCode: 200, body: 'success'};\n    }\n    return data\n}\n\n")))}f.isMDXComponent=!0},1636:function(e,n,t){n.Z=t.p+"assets/images/Models-Dependencies-Folder-Configuration-8d231477c3201247abb0054a74e71138.png"}}]);