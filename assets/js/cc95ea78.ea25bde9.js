"use strict";(self.webpackChunkrbs_dev_docs=self.webpackChunkrbs_dev_docs||[]).push([[968],{3905:function(e,t,s){s.d(t,{Zo:function(){return p},kt:function(){return m}});var r=s(7294);function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function o(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,r)}return s}function a(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?o(Object(s),!0).forEach((function(t){n(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function i(e,t){if(null==e)return{};var s,r,n=function(e,t){if(null==e)return{};var s,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)s=o[r],t.indexOf(s)>=0||(n[s]=e[s]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)s=o[r],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(n[s]=e[s])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),s=t;return e&&(s="function"==typeof e?e(t):a(a({},t),e)),s},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var s=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(s),m=n,b=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return s?r.createElement(b,a(a({ref:t},p),{},{components:s})):r.createElement(b,a({ref:t},p))}));function m(e,t){var s=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=s.length,a=new Array(o);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var l=2;l<o;l++)a[l]=s[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,s)}d.displayName="MDXCreateElement"},7340:function(e,t,s){s.r(t),s.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=s(7462),n=s(3366),o=(s(7294),s(3905)),a=["components"],i={sidebar_position:1},c="About",l={unversionedId:"process-manager/about",id:"process-manager/about",isDocsHomePage:!1,title:"About",description:"A micro service architecture relies on services to do stuff.",source:"@site/docs/process-manager/about.md",sourceDirName:"process-manager",slug:"/process-manager/about",permalink:"/docs/process-manager/about",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/process-manager/about.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"General",permalink:"/docs/intro"},next:{title:"Inputs & Outputs",permalink:"/docs/process-manager/in-out"}},p=[{value:"Anatomy of A Process",id:"anatomy-of-a-process",children:[],level:2},{value:"API",id:"api",children:[{value:"Actions",id:"actions",children:[{value:"rbs.process.request.LIST",id:"rbsprocessrequestlist",children:[],level:4},{value:"rbs.process.request.EXECUTIONS",id:"rbsprocessrequestexecutions",children:[],level:4},{value:"rbs.process.request.START",id:"rbsprocessrequeststart",children:[],level:4},{value:"rbs.process.request.START_EXPRESS",id:"rbsprocessrequeststart_express",children:[],level:4},{value:"rbs.process.request.UPSERT",id:"rbsprocessrequestupsert",children:[],level:4},{value:"rbs.process.request.ADD_EVENT",id:"rbsprocessrequestadd_event",children:[],level:4},{value:"rbs.process.request.REMOVE_EVENT",id:"rbsprocessrequestremove_event",children:[],level:4},{value:"rbs.process.request.EVENTS",id:"rbsprocessrequestevents",children:[],level:4},{value:"rbs.process.request.GET_EXECUTION",id:"rbsprocessrequestget_execution",children:[],level:4},{value:"rbs.process.request.STOP",id:"rbsprocessrequeststop",children:[],level:4}],level:3}],level:2},{value:"FAQ",id:"faq",children:[],level:2}],u={toc:p};function d(e){var t=e.components,s=(0,n.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"about"},"About"),(0,o.kt)("p",null,"A micro service architecture relies on services to do stuff.\nBut most of the time there is an orchestration layer.\nYou can use RBS Process Manager to orchestrate other micro services."),(0,o.kt)("p",null,"However RBS Process Manager can also be used to create web services, or action handlers for clients.\nWithout the need of any microservice RBS Process Manager can be used to create a standalone process.\nIt can use Codb as its data store."),(0,o.kt)("p",null,"So you can use RBS processes in following ways:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Orchestrate other micro services"),(0,o.kt)("li",{parentName:"ul"},"Create a micro service using processes"),(0,o.kt)("li",{parentName:"ul"},"Combine both")),(0,o.kt)("h2",{id:"anatomy-of-a-process"},"Anatomy of A Process"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A process must contain at least one step and each step must have a unique ID."),(0,o.kt)("li",{parentName:"ul"},"A process can start from a certain step. You can set it via boolean ",(0,o.kt)("strong",{parentName:"li"},"first")," parameter. Otherwise it starts from first-defined step."),(0,o.kt)("li",{parentName:"ul"},"A process has an internal storage unit called ",(0,o.kt)("strong",{parentName:"li"},"state")," which you can write to and read from it through steps."),(0,o.kt)("li",{parentName:"ul"},"A process has also a user-based storage called ",(0,o.kt)("strong",{parentName:"li"},"userState"),".\nWhile ",(0,o.kt)("em",{parentName:"li"},"state")," is globally available in a single execution, users access their data in ",(0,o.kt)("em",{parentName:"li"},"userState")," by a valid token."),(0,o.kt)("li",{parentName:"ul"},"In a process, a step cannot call itself.")),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("p",null,"For more information about Process Manager API please visit documentation section on developer console."),(0,o.kt)("h3",{id:"actions"},"Actions"),(0,o.kt)("p",null,"You can interact with Process Manager API by calling one of the following actions."),(0,o.kt)("h4",{id:"rbsprocessrequestlist"},"rbs.process.request.LIST"),(0,o.kt)("p",null,"Returns list of available processes in your project.\nThere is no parameter to filter processes yet!"),(0,o.kt)("h4",{id:"rbsprocessrequestexecutions"},"rbs.process.request.EXECUTIONS"),(0,o.kt)("p",null,"Returns list of recent executions of a process."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface {\n    processId: string\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequeststart"},"rbs.process.request.START"),(0,o.kt)("p",null,"Starts a new execution in normal mode.\nIf you don't send executionId, a sortable unique value will be assigned automatically."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface {\n    processId: string\n    executionId?: string\n    payload: { [key: string]: any }\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequeststart_express"},"rbs.process.request.START_EXPRESS"),(0,o.kt)("p",null,"Starts a new execution in express mode.\nIf you want to start an execution and retrieve the final output, please use express mode.\nIf you want it to be cached for awhile you should call ",(0,o.kt)("em",{parentName:"p"},"rbs.process.get.START_EXPRESS")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface {\n    processId: string\n    executionId?: string\n    payload: { [key: string]: any }\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequestupsert"},"rbs.process.request.UPSERT"),(0,o.kt)("p",null,"Updates an existing process or creates a new one if ",(0,o.kt)("em",{parentName:"p"},"processId")," is not in use."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface  {\n    processId: string\n    data: any\n    roles?: string[]\n    state?: object\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequestadd_event"},"rbs.process.request.ADD_EVENT"),(0,o.kt)("p",null,"Adds a new trigger event to a process.\nWhen a trigger event fired, a new execution starts automatically.\nTo accomplish that properly, you should add the event also into receives part of Process Manager's role."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface  {\n    processId: string\n    event: string\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequestremove_event"},"rbs.process.request.REMOVE_EVENT"),(0,o.kt)("p",null,"Removes a trigger event from a process."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface  {\n    processId: string\n    event: string\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequestevents"},"rbs.process.request.EVENTS"),(0,o.kt)("p",null,"Returns a list of available trigger events of a process."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface  {\n    processId: string\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequestget_execution"},"rbs.process.request.GET_EXECUTION"),(0,o.kt)("p",null,"Returns details of an execution and steps the execution passed through."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface {\n    processId: string\n    executionId: string,\n}\n")),(0,o.kt)("h4",{id:"rbsprocessrequeststop"},"rbs.process.request.STOP"),(0,o.kt)("p",null,"Returns inputs and outputs of a single step in execution of a process."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface {\n    processId: string\n    executionId: string,\n}\n")),(0,o.kt)("h2",{id:"faq"},"FAQ"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"What is a process?")),(0,o.kt)("p",null,"A process is a collection of steps each aiming to accomplish a small part of a business logic."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"What is the advantage of a process?")),(0,o.kt)("p",null,"A process is the customization unit of a project. We recommend writing a process for each business function. For example creating an order or adding items to cart can be handled by processes. By using processes for these tasks you can easily customize workflows in the future. Instead of writing native code and implementing these tasks in microservices we recommend using processes."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Is it possible to run multiple executions of a process?")),(0,o.kt)("p",null,"You can start as many executions as you need, unless you reach project-based rate limits on the middleware.\nWhen you hit the rate limits, you should wait for awhile before starting more processes."),(0,o.kt)("p",null,"There is also a soft limit on maximum step count which is 999 by default.\nThis can be updated to 9999."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Is it possible to run multiple steps at the same time in a process?")),(0,o.kt)("p",null,"Short answer is, no! It is not possible to run multiple steps at the same time in a single execution."),(0,o.kt)("p",null,"It is also not possible multiple interactions with a single execution of a process.\nA process can respond to a single incoming request and proceeds to the next step accordingly.\nThat makes multiple interactions impossible on a single step."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"How can I start a process?")),(0,o.kt)("p",null,"There are 2 ways of starting a process: normal (",(0,o.kt)("em",{parentName:"p"},"rbs.process.request.START"),") and express (",(0,o.kt)("em",{parentName:"p"},"rbs.process.request.START_EXPRESS"),") mode.\nIn normal mode, Process Manager returns details of the newly started execution.\nIf you want to track the progress of that execution, you should call ",(0,o.kt)("em",{parentName:"p"},"rbs.process.request.GET_EXECUTION")," action.\nIn express mode, Process Manager executes all possible steps and responds with the result.\nExpress mode doesn't support asynchronous operations.\nIt's not recommended to start a process in express mode if it takes longer than 30 seconds to complete."),(0,o.kt)("p",null,"Express mode also has a cache (",(0,o.kt)("em",{parentName:"p"},"rbs.process.get.START_EXPRESS"),") feature."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Where is the documentation of a process?")),(0,o.kt)("p",null,"Processes are by their nature documented because they are composed of UI elements. They are created by a drag and drop editor. Even non developers can understand how a process works."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Is there any way to analyze processes?")),(0,o.kt)("p",null,"You can mine processes in the process mining screen. Process mining gives you insight on what routes are being executed most. It also gives you time based stats on steps."))}d.isMDXComponent=!0}}]);