"use strict";(self.webpackChunkrbs_dev_docs=self.webpackChunkrbs_dev_docs||[]).push([[141],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3416:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},p="RDK",c={unversionedId:"main_concepts/rdk",id:"main_concepts/rdk",isDocsHomePage:!1,title:"RDK",description:"retter.io development kit",source:"@site/docs/main_concepts/rdk.mdx",sourceDirName:"main_concepts",slug:"/main_concepts/rdk",permalink:"/docs/main_concepts/rdk",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/main_concepts/rdk.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Your First Project",permalink:"/docs/getting_started/Project structure"},next:{title:"Classes",permalink:"/docs/main_concepts/classes"}},s=[{value:"retter.io development kit",id:"retterio-development-kit",children:[],level:3},{value:"RDK Pipeline",id:"rdk-pipeline",children:[],level:2},{value:"Call single operation",id:"call-single-operation",children:[],level:2}],u={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"rdk"},"RDK"),(0,i.kt)("h3",{id:"retterio-development-kit"},"retter.io development kit"),(0,i.kt)("p",null,"You can use RDK to make calls to system resources like files or global memory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import RDK, { Data, InitResponse, Response, StepResponse } from "@retter/rdk"\n\nconst rdk = new RDK()\n')),(0,i.kt)("p",null,"There are two ways for calling a RDK operation:"),(0,i.kt)("h2",{id:"rdk-pipeline"},"RDK Pipeline"),(0,i.kt)("p",null,"With pipeline method you can add multiple operations to one API call. All operations will be handled in parallel."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rdk.pipeline().addToSortedSet({\n        // ...\n    }).getFile({\n        // ...\n    }).send()\n")),(0,i.kt)("p",null,"This returns following object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface OperationsOutput extends ReadonlyOperationsOutput {\n    setGlobalMemory?: OperationResponse[]\n    addToSortedSet?: OperationResponse[]\n    removeFromSortedSet?: OperationResponse[]\n    setFile?: OperationResponse[]\n    setLookUpKey?: OperationResponse[]\n    deleteLookUpKey?: OperationResponse[]\n}\n")),(0,i.kt)("h2",{id:"call-single-operation"},"Call single operation"),(0,i.kt)("p",null,"You can call a single operation without pipelining."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rdk.addToSortedSet({\n        // ...\n    })\n")))}d.isMDXComponent=!0}}]);