"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[8172],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=o,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||i;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4575:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={sidebar_label:"Get started with CLI",sidebar_position:3},p="Get Started With CLI",s={unversionedId:"Getting Started/Get started with CLI",id:"Getting Started/Get started with CLI",title:"Get Started With CLI",description:"This article shows how to setup Rio' s CLI (Command Line Tool) and create a new project. So we can use Rio with our prefered IDE.",source:"@site/docs/Getting Started/Get started with CLI.md",sourceDirName:"Getting Started",slug:"/Getting Started/Get started with CLI",permalink:"/docs/Getting Started/Get started with CLI",editUrl:"https://github.com/rettersoft/rettersoft.github.io/tree/New-Side-Bar/docs/Getting Started/Get started with CLI.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Get started with CLI",sidebar_position:3},sidebar:"GettingStartedSideBar",previous:{title:"Your first project",permalink:"/docs/Getting Started/Your first project"},next:{title:"Get started with iOS",permalink:"/docs/Getting Started/Get started with iOS"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Setting Up Your Profile With CLI",id:"setting-up-your-profile-with-cli",level:2},{value:"Project Initialization",id:"project-initialization",level:2},{value:"Generating Classes",id:"generating-classes",level:2},{value:"Example:",id:"example",level:4},{value:"Project Pre-Deployment",id:"project-pre-deployment",level:3},{value:"Project Deployment",id:"project-deployment",level:3}],d={toc:u};function h(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"get-started-with-cli"},"Get Started With CLI"),(0,i.kt)("p",null,"This article shows how to setup Rio' s CLI (Command Line Tool) and create a new project. So we can use Rio with our prefered IDE.\nYou can also watch \"",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=VR7xygriFRE%22"},'https://www.youtube.com/watch?v=VR7xygriFRE"')," to follow along."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> npm i -g @retter/rio-cli\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE")),(0,i.kt)("p",null,'If you get "The operation was rejected by your operating system." error in this setup, you can add ',(0,i.kt)("inlineCode",{parentName:"p"},"sudo")," before each command."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"setting-up-your-profile-with-cli"},"Setting Up Your Profile With CLI"),(0,i.kt)("p",null,'After CLI setup is complete, we can set your profile up. To do this visit "',(0,i.kt)("a",{parentName:"p",href:"https://c.retter.io%22"},'https://c.retter.io"')," and login. Than open settings ",(0,i.kt)("inlineCode",{parentName:"p"},"Rbs Console > Right Top Dropdown Menu > Settings"),". There you will see your SECRET_ID and SECRET_KEY.\nDecide your PROFILE_NAME and run the following command with your own PROFILE_NAME, SECRET_ID and SECRET_KEY."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio set-profile --profile-name PROFILE_NAME --secret-id SECRET_ID --secret-key SECRET_KEY\n")),(0,i.kt)("p",null,"To see if your profile had been initialized, run the following command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio list-profiles\n")),(0,i.kt)("h2",{id:"project-initialization"},"Project Initialization"),(0,i.kt)("p",null,"If we had successfully logged in, we can initialize our project with decided PROJECT_ALIAS. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio init PROJECT_ALIAS\n")),(0,i.kt)("p",null,'After this command you have a working project in your system. You can check it by revisiting "',(0,i.kt)("a",{parentName:"p",href:"https://c.retter.io%22'"},"https://c.retter.io\"'")," s Projects page. There you will see a project with your defined PROJECT_ALIAS."),(0,i.kt)("h2",{id:"generating-classes"},"Generating Classes"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rio generate")),(0,i.kt)("p",null,"Create the rio file for each of classes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio generate\n")),(0,i.kt)("h4",{id:"example"},"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio init TEST\n> cd TEST\n> rio generate # optional\n> rio pre-deploy # optional\n> rio deploy\n")),(0,i.kt)("h3",{id:"project-pre-deployment"},"Project Pre-Deployment"),(0,i.kt)("p",null,"This step does not make any changes. Just only detects changes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio pre-deploy\n")),(0,i.kt)("h3",{id:"project-deployment"},"Project Deployment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> rio deploy\n")))}h.isMDXComponent=!0}}]);