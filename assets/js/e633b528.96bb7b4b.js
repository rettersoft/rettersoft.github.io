"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[6613],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=s,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8293:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u}});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),o=["components"],i={id:"Method Data Context",sidebar_label:"Method Data Context",sidebar_position:8},l="Method Data Context",d={unversionedId:"Concepts/Classes/Methods/Method Data Context",id:"Concepts/Classes/Methods/Method Data Context",title:"Method Data Context",description:"Data object used in every method call has some useful attributes. Mainly they are; Request, Response, State and Context.",source:"@site/docs/Concepts/Classes/Methods/Method Data Context.mdx",sourceDirName:"Concepts/Classes/Methods",slug:"/Concepts/Classes/Methods/Method Data Context",permalink:"/docs/Concepts/Classes/Methods/Method Data Context",editUrl:"https://github.com/rettersoft/rettersoft.github.io/tree/master/docs/Concepts/Classes/Methods/Method Data Context.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"Method Data Context",sidebar_label:"Method Data Context",sidebar_position:8},sidebar:"ConceptsSideBar",previous:{title:"Retry Delay",permalink:"/docs/Concepts/Classes/Methods/Retry Delay"},next:{title:"Nodejs",permalink:"/docs/Concepts/Classes/Supported Langueges/Nodejs"}},c={},u=[{value:"Request",id:"request",level:2},{value:"Request Model",id:"request-model",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response",id:"response",level:2},{value:"Response Model",id:"response-model",level:3},{value:"Response Example",id:"response-example",level:3},{value:"Context",id:"context",level:2},{value:"Context Model",id:"context-model",level:3},{value:"State",id:"state",level:2},{value:"State Model",id:"state-model",level:3}],p={toc:u};function m(e){var t=e.components,n=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"method-data-context"},"Method Data Context"),(0,a.kt)("p",null,"Data object used in every method call has some useful attributes. Mainly they are; Request, Response, State and Context."),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("p",null,"Contains information about the request method has received. Has the following form:"),(0,a.kt)("h3",{id:"request-model"},"Request Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Request<T = any> {\n    httpMethod: string\n    body?: T\n    headers: { [key: string]: string }\n    queryStringParams: { [key: string]: string }\n}\n")),(0,a.kt)("h3",{id:"request-example"},"Request Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"if(data.request.httpMethod==='POST'){\n    const userMessage=data.request.body.userMessage\n}\n")),(0,a.kt)("h2",{id:"response"},"Response"),(0,a.kt)("p",null,"Using the response, anyting can be returned in the body. "),(0,a.kt)("h3",{id:"response-model"},"Response Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Response<T = any> {\n    statusCode: number\n    body?: T\n    headers?: { [key: string]: string },\n    isBase64Encoded?: boolean\n}\n")),(0,a.kt)("h3",{id:"response-example"},"Response Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"if(calculationResult==='correct'){\n    data.response={\n        statusCode: 200, body: 'Success!'\n        }\n}\nreturn data;\n")),(0,a.kt)("h2",{id:"context"},"Context"),(0,a.kt)("p",null,"Context has the metadata values of data."),(0,a.kt)("h3",{id:"context-model"},"Context Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Context {\n    requestId: string\n    projectId: string\n    action: string\n    identity: string\n    serviceId?: string\n    headers?: { [key: string]: any }\n    classId: string\n    instanceId?: string\n    methodName: string\n    refererClassId?: string\n    refererInstanceId?: string\n    refererMethodName?: string\n    refererUserId?: string\n    refererIdentity?: string\n    claims?: { [key: string]: any }\n    isAnonymous?: boolean\n    culture?: string\n    platform?: string\n    userId?: string\n    sourceIP: string\n    sessionId?: string\n    clientOs?: string\n    targetServiceIds?: string[]\n    relatedUserId?: string\n    pathParameters?: {\n        path: string\n        rule?: string\n        params?: { [key: string]: string }\n    }\n}\n")),(0,a.kt)("h2",{id:"state"},"State"),(0,a.kt)("p",null,"State represents the state of that instance. Contrary to public, private object can not be accessed from other instances. "),(0,a.kt)("h3",{id:"state-model"},"State Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface State {\n    public?: { [key: string]: any }\n    private?: { [key: string]: any }\n    user?: { [userId: string]: { [key: string]: any } }\n    role?: { [identity: string]: { [key: string]: any } }\n}\n")))}m.isMDXComponent=!0}}]);