"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[1748],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3320:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"Your first project",sidebar_label:"Your first project",sidebar_position:1},c="Your First Project",l={unversionedId:"Getting Started/Your first project",id:"Getting Started/Your first project",title:"Your First Project",description:"This guide help you to create your first project with Retter Console.",source:"@site/docs/Getting Started/Your first project.md",sourceDirName:"Getting Started",slug:"/Getting Started/Your first project",permalink:"/docs/Getting Started/Your first project",editUrl:"https://github.com/rettersoft/rettersoft.github.io/blob/master/docs/Getting Started/Your first project.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"Your first project",sidebar_label:"Your first project",sidebar_position:1},sidebar:"GettingStartedSideBar",next:{title:"Get started with iOS",permalink:"/docs/Getting Started/Get started with iOS"}},p={},d=[{value:"Creating a project",id:"creating-a-project",level:2},{value:"Creating a class",id:"creating-a-class",level:2},{value:"Learn With Demo",id:"learn-with-demo",level:3}],u={toc:d};function m(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"your-first-project"},"Your First Project"),(0,o.kt)("p",null,"This guide help you to create your first project with Retter Console."),(0,o.kt)("h2",{id:"creating-a-project"},"Creating a project"),(0,o.kt)("p",null,"To create a new project, head to ",(0,o.kt)("a",{parentName:"p",href:"https://c.retter.io"},"Rio Console")," and log in. After successful login, you can create your first Rio project."),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"Greeting Screen",src:n(9196).Z,width:"1071",height:"907"})),(0,o.kt)("p",null,"Click to ",(0,o.kt)("inlineCode",{parentName:"p"},"Create New Project")," button. Then choose an alias to your first project."),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"New Project Screen",src:n(4351).Z,width:"1071",height:"907"})),(0,o.kt)("p",null,"And, congratulations. You created the first Rio Project. Now on, we can continue to create classes."),(0,o.kt)("h2",{id:"creating-a-class"},"Creating a class"),(0,o.kt)("p",null,"As you know, Rio is an object-oriented cloud provider. We can define our classes and models, create an class instance etc. In this section you will be learn how to create class using Rio Console."),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"Project Detail Screen",src:n(4150).Z,width:"1071",height:"907"})),(0,o.kt)("p",null,"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Create")," button and name the class you want to create. After class creation, you'll see the class contents."),(0,o.kt)("p",null,"A class consist of ",(0,o.kt)("inlineCode",{parentName:"p"},"template.yml"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),", and typescript user codes. This tutorial we won't dive into details. You can find detailed explanations on References section."),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"template.yml")," file, you can configure how to interact with a class. You can point to methods using file name and method name with dot notation like ",(0,o.kt)("inlineCode",{parentName:"p"},"fileName.methodName"),". File name refers to typescript file and method name refers to function exported on that file."),(0,o.kt)("p",null,"Additionally, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," packages with classes. Just add any package use want to use to dependencies."),(0,o.kt)("h3",{id:"learn-with-demo"},"Learn With Demo"),(0,o.kt)("p",null,"For demo purposes let's create a todo app backend. A simple todo app needs 3 methods: list, create, and markAsCompleted. Let's create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Todo")," class and define these methods in template."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# template.yml\n...rest\nmethods:\n    - method: listTodos\n      sync: true\n      handler: index.listTodos\n    - method: createTodo\n      sync: true\n      handler: index.createTodo\n    - method: markTodoAsCompleted\n      sync: true\n      handler: index.markTodoAsCompleted\n")),(0,o.kt)("p",null,"Now, we can create corresponding functions."),(0,o.kt)("p",null,"Rio has first-class typescript support for easing developers life. We'll leverage typescript when creating methods. Each method receives a ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," object and must return a ",(0,o.kt)("inlineCode",{parentName:"p"},"StepResponse"),". You can find out more about this in ",(0,o.kt)("a",{parentName:"p",href:"/docs/Reference/Method%20Data%20Context/"},"Method Data Context Reference"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// index.ts\nimport { Data, StepResponse } from '@retter/rdk'\n\n// ...rest\n\nexport async function init(data: Data): Promise<InitResponse> {\n  return { state: { public: { items: [] } }\n}\n\nexport async function listTodos(data: Data): Promise<StepResponse> {\n    return data\n}\n\nexport async function createTodo(data: Data): Promise<StepResponse> {\n    return data\n}\n\nexport async function markTodoAsCompleted(data: Data): Promise<StepResponse> {\n    return data\n}\n")),(0,o.kt)("p",null,"Now, we can impletement our logic. Rio methods are statefull. We don't need any database, we can just use simple state. Find out more on ",(0,o.kt)("a",{parentName:"p",href:"/docs/Concepts/State/"},"State")," docs."),(0,o.kt)("p",null,"To creating a list item, we need a task. We can get task information from the data's request object."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To keep things simple, we dont implement all details for todo app.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export async function createTodo(data: Data): Promise<StepResponse> {\n    const { task } = data.request.body\n\n    data.state.public.items.push({\n        task,\n        isCompleted: false,\n    })\n\n    return data\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export async function markTodoAsCompleted(data: Data): Promise<StepResponse> {\n    const { task } = data.request.body\n\n    const item = data.state.public.items.find(item => item.task === task)\n    item.isCompleted = true\n\n    return data\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export async function listTodos(data: Data): Promise<StepResponse> {\n    data.response = {\n        statusCode: 200,\n        body: {\n            items: daat.state.public.items,\n        },\n    }\n\n    return data\n}\n")),(0,o.kt)("p",null,"Now, we can implement out methods in ",(0,o.kt)("a",{parentName:"p",href:"/docs/Getting%20Started/Get%20started%20with%20web/"},"client side"),"."))}m.isMDXComponent=!0},9196:function(e,t,n){t.Z=n.p+"assets/images/create-new-project-1-170e4b2465e3b495d9154735825513fd.png"},4351:function(e,t,n){t.Z=n.p+"assets/images/create-new-project-2-281f4a481ccc68f48600dd32a1e7dca9.png"},4150:function(e,t,n){t.Z=n.p+"assets/images/create-new-project-3-e55c45a4a5e447c933b5e4ed1a86ccd7.png"}}]);