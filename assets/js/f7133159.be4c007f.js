"use strict";(self.webpackChunkrbs_dev_docs=self.webpackChunkrbs_dev_docs||[]).push([[5341],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7723:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],c={sidebar_position:6},i="Global Memory",l={unversionedId:"main_concepts/globalMemory",id:"main_concepts/globalMemory",isDocsHomePage:!1,title:"Global Memory",description:"Think of rtbs as one big computer. There are object instances all over. Some instances can write to a global shared memory for other instances to consume.",source:"@site/docs/main_concepts/globalMemory.mdx",sourceDirName:"main_concepts",slug:"/main_concepts/globalMemory",permalink:"/docs/main_concepts/globalMemory",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/main_concepts/globalMemory.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Sorted Sets",permalink:"/docs/main_concepts/sortedSets"},next:{title:"Lookup Keys",permalink:"/docs/main_concepts/lookupKeys"}},p=[{value:"Performance tip",id:"performance-tip",children:[],level:3}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"global-memory"},"Global Memory"),(0,o.kt)("p",null,"Think of rtbs as one big computer. There are object instances all over. Some instances can write to a global shared memory for other instances to consume. "),(0,o.kt)("p",null,"For example a ",(0,o.kt)("strong",{parentName:"p"},"Product")," class can write its metadata to its state like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function update(data: Data): Promise<StepResponse> {\n    data.state.private = data.request.body\n\n    return data\n}\n")),(0,o.kt)("p",null,"If another object would like to read this products state then it will have to fetch its instance and read its state. To make things faster let's write my metadata to memory too."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function update(data: Data): Promise<StepResponse> {\n    data.state.private = data.request.body\n\n    await rdk.setGlobalMemory({\n        key: "product#" + data.context.instanceId,\n        value: data.state.private\n    })\n\n    return data\n}\n')),(0,o.kt)("p",null,"Another object can easily read this product metadata from memory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'\nexport async function getProductMetadata(data: Data): Promise<StepResponse> {\n\n    let memoryResult = await rdk.getGlobalMemory({\n        key: "product#" + data.request.body.productId\n    })\n\n    if (memoryResult.success) {\n        data.response = {\n            statusCode: 200,\n            body: memoryResult.data\n        }\n    } else {\n        data.response = {\n            statusCode: 404\n        }\n    }\n\n    return data\n}\n')),(0,o.kt)("h3",{id:"performance-tip"},"Performance tip"),(0,o.kt)("p",null,"To make things even faster let's make this method readonly so it doesn't deal with FIFO logic. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"    - method: getProductMetadata\n      tag: test\n      sync: true\n      readonly: true\n      steps:\n          - id: default\n            handler: index.getProductMetadata\n")))}d.isMDXComponent=!0}}]);