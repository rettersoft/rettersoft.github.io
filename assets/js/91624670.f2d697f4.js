"use strict";(self.webpackChunkrio_doc=self.webpackChunkrio_doc||[]).push([[1949],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,h=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2320:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_label:"State",sidebar_position:6},l="State",c={unversionedId:"Concepts/State",id:"Concepts/State",title:"State",description:"Every object has a state. This state is stored within the object. Best practice is to keep the size of this state relatively small. For instance if you are developing a chat application you might hold last 100 messages in state but store the rest in a sortedSet of this object. However we will only talk about state in this article.",source:"@site/docs/Concepts/State.md",sourceDirName:"Concepts",slug:"/Concepts/State",permalink:"/docs/Concepts/State",editUrl:"https://github.com/rettersoft/rettersoft.github.io/blob/master/docs/Concepts/State.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"State",sidebar_position:6},sidebar:"ConceptsSideBar",previous:{title:"Dependencies",permalink:"/docs/Concepts/Dependencies"},next:{title:"Methods",permalink:"/docs/Concepts/Methods"}},u={},p=[{value:"Public",id:"public",level:3},{value:"Private",id:"private",level:3},{value:"User",id:"user",level:3},{value:"Role",id:"role",level:3},{value:"What do you do with state?",id:"what-do-you-do-with-state",level:3},{value:"getState function",id:"getstate-function",level:3}],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"state"},"State"),(0,o.kt)("p",null,"Every object has a state. This state is stored within the object. Best practice is to keep the size of this state relatively small. For instance if you are developing a chat application you might hold last 100 messages in state but store the rest in a sortedSet of this object. However we will only talk about state in this article.\nState object gets streamed to client sdk\u2019s in real time.\nState consists of four parts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "public": {},\n  "private": {},\n  "user": {\n    "userId1": { }\n  },\n  "role": {\n    "roleName1": { }\n  }\n}\n')),(0,o.kt)("h3",{id:"public"},"Public"),(0,o.kt)("p",null,"Public state can be seen by every client connected."),(0,o.kt)("h3",{id:"private"},"Private"),(0,o.kt)("p",null,"Private state doesn\u2019t get streamed to any client. Only server side code (objects methods) can see and edit this state."),(0,o.kt)("h3",{id:"user"},"User"),(0,o.kt)("p",null,"User object has userId\u2019s in it. Each userId node contains the data specific for that userId. Only that user is allowed to see that data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n    "userId": {\n        "userId1": {}\n    }\n}\n')),(0,o.kt)("h3",{id:"role"},"Role"),(0,o.kt)("p",null,"Role state can be seen by anybody who has that role."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n    "roleId": {\n        "roleName1": {}\n    }\n}\n')),(0,o.kt)("h3",{id:"what-do-you-do-with-state"},"What do you do with state?"),(0,o.kt)("p",null,"In your server side code you update the state object any way you want. Clients connected to this object will receive updates according to their permission level. It easy straight forward."),(0,o.kt)("h3",{id:"getstate-function"},"getState function"),(0,o.kt)("p",null,"Clients can either get the state via REST api or they can subscribe to state via sdk."),(0,o.kt)("p",null,"If you want to get your state via REST api you can define a delegate function in your template file and customize what part of state you will return to anybody making the call. Below I defined a getState function in index.ts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"getState: index.getState\n")),(0,o.kt)("p",null,"Below is my getState function which returns my objects private state to any caller. Of course this is pretty unsecure. Don\u2019t do this at home :)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function getState(data: Data): Promise<Response> {\n    return { \n        statusCode: 200, \n        body: {\n            ...data.state.private,\n        }\n    }\n}\n")))}f.isMDXComponent=!0}}]);